#include <node.h>
#include <v8.h>

#ifdef __GNUC__
#include "gtkDialog.h"
#endif

using namespace v8;

static Dialog g_dialog;

Handle<Value> infoBox(const Arguments &args) {
	HandleScope scope;
	String::Utf8Value value(args[0]);
	g_dialog.messageBox(INFO, *value);
	return scope.Close(String::New(""));
}

Handle<Value> warningBox(const Arguments &args) {
	HandleScope scope;
	String::Utf8Value value(args[0]);
	g_dialog.messageBox(WARNING, *value);
	return scope.Close(String::New(""));
}

Handle<Value> questionBox(const Arguments &args) {
	HandleScope scope;
	String::Utf8Value value(args[0]);
	g_dialog.messageBox(QUESTION, *value);
	return scope.Close(String::New(""));
}

Handle<Value> errorBox(const Arguments &args) {
	HandleScope scope;
	String::Utf8Value value(args[0]);
	g_dialog.messageBox(ERROR, *value);
	return scope.Close(String::New(""));
}

void init(Handle<Object> exports) {
	exports->Set(String::NewSymbol("infoBox"),
		FunctionTemplate::New(infoBox)->GetFunction());
	exports->Set(String::NewSymbol("warningBox"),
		FunctionTemplate::New(warningBox)->GetFunction());
	exports->Set(String::NewSymbol("questionBox"),
		FunctionTemplate::New(questionBox)->GetFunction());
	exports->Set(String::NewSymbol("errorBox"),
		FunctionTemplate::New(errorBox)->GetFunction());
	/* NODE_SET_METHOD(exports, "infoBox", infoBox); */
	// NODE_SET_METHOD(exports, "warningBox", warningBox);
	// NODE_SET_METHOD(exports, "questionBox", questionBox);
	/* NODE_SET_METHOD(exports, "errorBox", errorBox); */
}

NODE_MODULE(dialog, init)
